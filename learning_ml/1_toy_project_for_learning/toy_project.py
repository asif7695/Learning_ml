# -*- coding: utf-8 -*-
"""toy_project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n1sbbw0ZvJTP01WuR5qNomp0pyhLuK3b

# Steps
1. prooccess + Exploratory data analysis (EDA) + feature selection
2. extract input output cols
3. Scale the value
4. Train test split
5. Train the model
6. Evaluate the model/ model selection
7. Deploy the model
"""

#import all libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# read dataset
df= pd.read_csv('/placement.csv')
df

# 1drop unnecessary column
df= df.drop(["Unnamed: 0"],axis=1)
df

# 1(EDA) scatter diagram to get some idea about which model to run
plt.scatter(df['cgpa'],df['iq'], c=df['placement']) # y=iq, x=cgpa

#creating model
#logistic regression

# 2extract all dependent and independent cols
X = df.iloc[:,0:2]  #[for all rows, for 0 to 1 cols]
Y = df.iloc[:,-1]  #[for all rows, -1 cols]

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=.1)  # .1 for 10% data for test and 90% for train

#scaling
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train= scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# model train
from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(X_train,Y_train)  # that's how we train model

# evaluate model
X_pred = model.predict(X_test)
X_pred

Y_test

# accuracy
from sklearn.metrics import accuracy_score
accuracy_score(Y_test,X_pred)

# visualise decition boundry
from mlxtend.plotting import plot_decision_regions
plot_decision_regions(X_train, Y_train.values, clf=model, legend=2)

import pickle
pickle.dump(model,open('model.pkl','wb'))